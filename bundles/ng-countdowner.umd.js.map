{"version":3,"file":"ng-countdowner.umd.js.map","sources":["ng://ng-countdowner/src/app/countdowner/ng-countdowner/ng-countdowner.component.ts","ng://ng-countdowner/src/app/countdowner/countdowner.module.ts"],"sourcesContent":["import {Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\n\n@Component({\n  selector: 'app-ng-countdowner',\n  templateUrl: './ng-countdowner.component.html',\n  styleUrls: ['./ng-countdowner.component.css']\n})\nexport class NgCountdownerComponent implements OnInit {\n  @Input() end: any; // end date of countdown\n  @Input() start: any; // start date of countdown\n  @Output() timerExpired = new EventEmitter(true); // emit timer expiry\n  @Output() timerStarted = new EventEmitter(true);\n  @Input() countDownTimerVisible: boolean;\n  @Input() expiryMessage: string;\n  countDownDate: any;\n  countTimer: any;\n  setInterval: any;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n    this.initTimer();\n  }\n\n  initTimer() {\n    const start = new Date(this.start).getTime();\n    const currentdate = new Date();\n    const currentTimeStamp = currentdate.getTime();\n\n    if (currentTimeStamp > start || isNaN(start)) { // check if timer has started\n      this.startTimer();\n    } else {\n      this.countTimer = 'The timer has not started';\n    }\n  }\n\n  startTimer() {\n    this.countDownDate = new Date(this.end).getTime(); // end date formatted\n    this.setInterval = setInterval(() => this.runTimer(), 1000);\n  }\n\n  runTimer() {\n    const now = new Date().getTime(); // Getting current timestamp\n    const interval = this.countDownDate - now; // Difference between current timestamp and end timestamp\n    const seconds = Math.floor((interval % (1000 * 60)) / 1000); // calculating seconds\n    const minutes = Math.floor((interval % (1000 * 60 * 60)) / (1000 * 60)); // calculating minutes\n    const hours = Math.floor((interval % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)); // calculating hours\n    const days = Math.floor(interval / (1000 * 60 * 60 * 24)); // calculating days\n    this.countTimer = this.prependZero(days) + ':' + this.prependZero(hours) + ':' + this.prependZero(minutes) + ':' + this.prependZero(seconds);\n// Emitting timer-end event\n    if (interval < 0) {\n      clearInterval(this.setInterval);\n      this.timerExpired.emit({'started': this.start, 'ended': this.end});\n      if (this.expiryMessage === ''){\n        this.countTimer = 'Timer has expired';\n      } else {\n        this.countTimer = this.expiryMessage;\n      }\n\n    }\n  }\n\n  prependZero(digit) {\n\n    if (digit < 10) {\n      digit = digit.toString();\n      const formattedNumber = '0' + digit;\n      return formattedNumber;\n    }\n    return digit;\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgCountdownerComponent } from './ng-countdowner/ng-countdowner.component';\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NgCountdownerComponent\n  ],\n  exports: [\n    NgCountdownerComponent\n  ]\n})\nexport class CountdownerModule { }\n"],"names":["EventEmitter","Component","Input","Output","NgModule","CommonModule"],"mappings":"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"}
